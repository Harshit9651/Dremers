
<% layout("/layouts/boilerplate") %>
<style>
  .ellu{
    margin-top: 5rem;
  }
/* Add your custom CSS here */
body {
    margin: 0;
    font-family: Arial, sans-serif;
}

.navbar {
    background-color: rgba(26, 183, 194, 0.377)!important;
    color: white !important;
    height: 4rem;
}

.navbar-brand {
    font-family: 'Dancing Script', cursive;
    font-size: 2rem;
    color: rgb(11, 11, 11);
}

.nav-link {
    color: rgb(22, 18, 18) !important;
    cursor: pointer;
    font-size: 1.2rem;
    font-weight: 600;
}

@media (max-width: 767px) {
    .navbar {
        background-color: rgb(46, 140, 145) !important;
    }

    .navbar-nav .nav-link {
        color: white !important;
        font-size: 1rem;
    }

    .navbar-collapse.show .navbar-nav .nav-link {
        color: rgb(238, 233, 233) !important;
    }

    .fa-circle-user {
        padding-top: 0.5rem;
        padding-right: 0.5rem;
        color: rgb(245, 245, 245);
    }

    .navbar-brand {
        font-family: 'Dancing Script', cursive;
        font-size: 2rem;
        color: rgb(15, 14, 14);
    }
}
    /* Media query for mobile devices */
    @media (max-width: 576px) {
        .navbar {
            height: 3rem; /* Adjust height for mobile */
        }
        body {
            margin-top: 4rem !important; /* Adjust margin for mobile */
        }
    }

 
</style>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
<link href="style/syle.css">
<body>



        <div class="container-fluid" >

        <div class="row ellu  " >
          <div class="col-md-8 offset-md-2 offset-lg-1 offset-0">
          <form method="post" action="/newstudent" id="userForm" class="needs-validation" novalidate>
            <h2 >
           Student Registreation Form 1:
            </h2>
        <div class="row mt-4">
          <div class="col-md-3 "> 
            <label for="Fname"  name="Fname" class="form-label"> First Name :</label>
            <input type="text" class="form-control" id="Fname" name="Fname" required></input>
            <div class="valid-feedback">
              Looks good!
            </div>
            <div id="validationServerUsernameFeedback" class="invalid-feedback">
              Please choose a username.
            </div>
          </div>
         
          <div class="col-md-3"> 
            <label for="Lname"   class="form-label">Last Name :</label>
            <input type="text" class="form-control" id="Lname"required name="Lname" ></input>
            <div class="valid-feedback">
              Looks good!
            </div>
            <div id="validationServerUsernameFeedback" class="invalid-feedback">
              Please choose a username.
            </div>
          </div>
        </div>
        <div class="row mt-3">
          <label class="form-label">Gender:</label>
         <div class="col-md-4 mb-3">
         
          <input  type="radio" id="male" name="gender" value="male" required>
          <label  for="male">Male</label>&nbsp;&nbsp;&nbsp;
          <input type="radio" id="female" name="gender" value="female" required>
          <label  for="female">Female</label>&nbsp;&nbsp;&nbsp;
          <input  type="radio" id="other" name="gender" value="other" required>
          <label  for="other">Other</label>
        </div>

        </div>


        <div class="mb-3">
          <label for="exampleFormControlInput1" class="form-label">Enter you DOB :</label>
          <input type="date" class="form-control" required id="exampleFormControlInput1" name="DOB" >
          <div class="valid-feedback">
            Looks good!
          </div>
          <div id="validationServerUsernameFeedback" class="invalid-feedback">
            Please choose a username.
          </div>
        </div>

          <div class="mb-3">
              <label for="exampleFormControlInput1" class="form-label">Email address :</label>
              <input type="email" class="form-control" required id="exampleFormControlInput1" name="Email" placeholder="name@example.com">
              <div class="valid-feedback">
                Looks good!
              </div>
              <div id="validationServerUsernameFeedback" class="invalid-feedback">
                Please choose a username.
              </div>
            </div>
           
   
            <div class="mb-3">
                <label for="Number" class="form-label">Enter Number:</label>
                <input type="tel" class="form-control" required name="Number" id="Number" >
                <div class="valid-feedback">
                  Looks good!
                </div>
                <div id="validationServerUsernameFeedback" class="invalid-feedback">
                  Please choose a username.
                </div>
              </div>
            <div class="mb-3">
              <label for="exampleFormControlTextarea1" class="form-label"> Tell About Yourself :</label>
              <textarea class="form-control" type="text" required name="Descripition"  id="exampleFormControlTextarea1" placeholder="Dear Student Please Describe carefully bescuse it show in Your  main Profile"></textarea>
              <div class="valid-feedback">
                Looks good!
              </div>
              <div id="validationServerUsernameFeedback" class="invalid-feedback">
                Please choose a username.
              </div>
            </div>
            <div class="mb-3">
              <label for="price" class="form-label"> Tell About Your Goal</label>
              <input type="text"  class="form-control" required name="Goal" id="price" >
              <div class="valid-feedback">
                Looks good!
              </div>
              <div id="validationServerUsernameFeedback" class="invalid-feedback">
                Please choose a username.
              </div>
        
            </div>
        
            <div class="mb-3">
              <label for="caste" class="form-label">Select Caste:</label>
              <select class="form-select" required id="caste" name="Caste">
                  <option value="" disabled selected>Select Caste</option>
                  <option value="Gen">General</option>
                  <option value="OBC">Other Backward Class (OBC)</option>
                  <option value="SC">Scheduled Caste (SC)</option>
                  <option value="ST">Scheduled Tribe (ST)</option>
                  <option value="OTHER">Other</option>
              </select>
              <div class="valid-feedback">Looks good!</div>
              <div class="invalid-feedback">Please select your caste.</div>
          </div>
          <div id="subCasteSection" class="mb-3" style="display: none;">
            <label for="subCaste" class="form-label">Select Sub-Caste:</label>
            <select class="form-select" id="subCaste" name="SubCaste">
                <!-- Options will be dynamically populated based on user selection -->
            </select>
            <div class="valid-feedback">Looks good!</div>
            <div class="invalid-feedback">Please select your sub-caste.</div>
        </div>
         
            <div class="mb-3">
              <label for="Countery" class="form-label">city:</label>
              <input type="text" class="form-control"required name="city" id="countery" >
              <div class="valid-feedback">
                Looks good!
              </div>
              <div id="validationServerUsernameFeedback" class="invalid-feedback">
                Please choose a username.
              </div>
            </div>
   
            <div class="mb-3">
              <label for="HomeTown" class="form-label">Enter HomeTown:</label>
              <input type="text" class="form-control" required id="HomeTown" name="HomeTown">
              <div class="valid-feedback">
                Looks good!
              </div>
              <div id="validationServerUsernameFeedback" class="invalid-feedback">
                Please choose a username.
              </div>
            </div>
   
            <div class="mb-3">
              <label for="password" class="form-label">Enter password:</label>
              <input type="password" class="form-control" required id="password" name="password">
              <div class="valid-feedback">
                Looks good!
              </div>
              <div id="validationServerUsernameFeedback" class="invalid-feedback">
                Please choose a username.
              </div>
            </div>

            <div class="mb-3">
              <div class="form-check">
                <input class="form-check-input" required type="checkbox" value="" id="invalidCheck" required>
                <label class="form-check-label" for="invalidCheck">
                  Agree to terms and conditions
                </label>
                <div class="invalid-feedback">
                  You must agree before submitting.
                </div>
              </div>
        <div class="row mt-5">
            <div class="col-3">
      
<button class="btn btn-success"> submit</button>
         </form>
</div>  

  

   
   
        </div>

      </div>
        
        
        
        </div>
        <script>// Example starter JavaScript for disabling form submissions if there are invalid fields
          (() => {
            'use strict'
          
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            const forms = document.querySelectorAll('.needs-validation')
          
            // Loop over them and prevent submission
            Array.from(forms).forEach(form => {
              form.addEventListener('submit', event => {
                if (!form.checkValidity()) {
                  event.preventDefault()
                  event.stopPropagation()
                }
          
                form.classList.add('was-validated')
              }, false)
            })
          })()
          
        
              
      
    const casteSelect = document.getElementById('caste');
    const subCasteSection = document.getElementById('subCasteSection');
    const subCasteSelect = document.getElementById('subCaste');

    // Object containing sub-caste options for each caste category
    const subCasteOptions = {
        Gen: ['Brahmin', 'swami','Thakur', 'Vaishya', 'Tyagi', 'Bhumihar', 'Muslims', 'Christians', 'Rajput', 'Kayastha', 'Pathans', 'Mughals', 'Shaikh', 'Sayyad', 'Jat Sikh', 'Bania', 'Punjabi Khatri', 'Punjabi Arora', 'Punjabi Sood', 'Baidya', 'Patidar', 'Patel', 'Kshatriya', 'Reddy', 'Kamma', 'Kapu', 'Gomati baniya', 'Velamma', 'Khsatriya Raju', 'Iyengar', 'Iyer', 'Vellalars', 'Nair', 'Naidu', 'Mukkulathor', 'Sengunthar', 'Parkavakulam', 'Nagarathar Baniya', 'Komati', 'Vokkaligas', 'Lingayats', 'Bunts'],

        OBC: ['Yadav', 'Kurmi', 'Gujjar', 'Teli', 'Khandayat', 'Ezhava', 'Gounder', 'Maratha', 'Vokkaliga', 'Nadar', 'Reddy', 'Jatav', 'Vanniyar', 'Kamma', 'Ahir', 'Naidu', 'Muthuraja', 'Agri', 'Koli', 'Saini', 'Dhobi', 'Tanti', 'Mali', 'Kumbhar', 'Chamar', 'Banjara', 'Golla', 'Kori', 'Kalar', 'Kapu', 'Kummari', 'Gujjar', 'Nayi', 'Vishwakarma', 'Dheevara', 'Devanga', 'Kuruba', 'Munnuru Kapu', 'Rajbhar', 'Telaga'],


        OBC: [
  
    'Chamar', 'Mahar', 'Bhangi', 'Mochi', 'Dhor', 
    'Kori', 'Mehtar', 'Dhed', 'Madiga', 'Valmiki', 
    'Pasi', 'Dholi', 'Halalkhor', 'Jatia', 'Bhangi', 
    'Ravidasi', 'Chuhra', 'Mala', 'Mang', 'Khatik', 
    'Paswan', 'Sweeper', 'Balmiki', 'Harijan', 'Chura', 
    'Dhor', 'Bhangi', 'Bhangi', 'Madiga', 'Chamar', 
    'Dholi', 'Mala', 'Valmiki', 'Balmiki', 'Khatik', 
    'Chuhra',   'Others',
],
ST : ['Gond', 'Bhil', 'Santal', 'Munda', 'Oraon', 'Kurukh', 'Garo', 'Khasi', 'Lepcha', 'Bodo', 'Mizo', 'Tripuri', 'Siddi', 'Chenchu', 'Koya', 'Bhilala', 'Kol', 'Saura', 'Mundari', 'Ho', 'Bhumij', 'Rabha', 'Karbi', 'Gondi', 'Korku', 'Mawasi', 'Tharu', 'Kharia', 'Dongria Kondh', 'Bhuiya', 'Juang', 'Jarwa', 'Onge', 'Pawar', 'Lambada', 'Andamanese', 'Sentinelese', 'Nicobarese', 'Irula', 'Kurumba', 'Others'],

        OTHER: []
    };

    // Event listener for caste selection change
    casteSelect.addEventListener('change', function() {
        const selectedCaste = this.value;
        if (selectedCaste in subCasteOptions) {
            populateSubCasteOptions(subCasteOptions[selectedCaste]);
            subCasteSection.style.display = 'block';
        } else {
            subCasteSection.style.display = 'none';
            subCasteSelect.innerHTML = ''; // Clear sub-caste options if not applicable
        }
    });

    // Function to populate sub-caste options
    function populateSubCasteOptions(options) {
        subCasteSelect.innerHTML = ''; // Clear previous options
        options.forEach(option => {
            const optionElement = document.createElement('option');
            optionElement.value = option;
            optionElement.textContent = option;
            subCasteSelect.appendChild(optionElement);
        });
    }

          
          
          </script>
        
</body>